{
  "openapi": "3.0.0",
  "info": {
    "title": "Beginner DB CRUD API",
    "description": "Beginner Study Api 연결 연습을 위한 API입니다 :)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Managing users"
    },
    {
      "name": "Post",
      "description": "Managing posts"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "description": "",
        "operationId": "getUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Something went wrong, please try again"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add single user",
        "description": "",
        "operationId": "addUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "User with the provided email already exists"
          },
          "500": {
            "description": "Something went wrong, please try again"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by id",
        "description": "",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "user id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Could not find user with the provided id"
          },
          "500": {
            "description": "Something went wrong, please try again"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user data. Put all 'customData' as whole if editing columns other than 'name'",
        "description": "",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "resource id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Could not find user with the provided id"
          },
          "442": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Something went wrong, please try again"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Soft delete user",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "resource id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Could not find user with the provided id"
          },
          "500": {
            "description": "Something went wrong, please try again"
          }
        }
      }
    },
    "/api/posts/": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Get all Posts",
        "description": "",
        "operationId": "getAllPosts",
        "parameters": [
          {
            "name": "toUser",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "no posts found"
          },
          "500": {
            "description": "Something went wrong, please try again"
          }
        }
      },
      "post": {
        "tags": [
          "Post"
        ],
        "summary": "Add single Post",
        "description": "",
        "operationId": "addPost",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "post registration failed, please try again"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        }
      }
    },
    "/api/posts/{postId}": {
      "patch": {
        "tags": [
          "Post"
        ],
        "summary": "Update single Post",
        "description": "",
        "operationId": "updatePostById",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "Post not found"
          },
          "500": {
            "description": "post registration failed, please try again"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Post"
        ],
        "summary": "Soft delete post",
        "description": "",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "resource id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "404": {
            "description": "Could not find user with the provided id"
          },
          "500": {
            "description": "Something went wrong, please try again"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "required": {
                    "type": "boolean",
                    "example": true
                  }
                }
              },
              "email": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "required": {
                    "type": "boolean",
                    "example": true
                  }
                }
              },
              "url": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "required": {
                    "type": "boolean",
                    "example": true
                  }
                }
              },
              "introduction": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "required": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "content": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "required": {
                    "type": "boolean",
                    "example": true
                  }
                }
              },
              "userId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "required": {
                    "type": "boolean",
                    "example": true
                  }
                }
              },
              "toUser": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "required": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "securityDefinitions": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "in": "header",
        "bearerFormat": "JWT"
      }
    }
  }
}